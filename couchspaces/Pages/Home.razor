@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using couchspaces.Services
@inject FirebaseService FirebaseService
@inject AuthenticationStateProvider AuthStateProvider

<h3>Welcome to CouchSpaces</h3>
<AuthorizeView>
    <Authorized>
        <button @onclick="SignOut" id="logout-button">Logout</button>
        <div id="user-info">
            <p id="user-name">Name: @(context.User.Identity?.Name ?? "Unknown")</p>
            <p id="user-email">Email: @(context.User.FindFirst(ClaimTypes.Email)?.Value ?? "Unknown")</p>
            <p id="user-token">Token: @(context.User.FindFirst("Token")?.Value ?? "Unknown")</p>
        </div>
    </Authorized>
    <NotAuthorized>
        <button @onclick="SignInWithGoogle" id="login-button">Sign In with Google</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task SignInWithGoogle()
    {
        var firebaseUser = await FirebaseService.SignInWithGoogleAsync();
        if (firebaseUser != null)
        {
            var customAuthStateProvider = (CouchspacesAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.MarkUserAsAuthenticated(firebaseUser);
        }
    }

    private async Task SignOut()
    {
        await FirebaseService.SignOutAsync();
    }
}
