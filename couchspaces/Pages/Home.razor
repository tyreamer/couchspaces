@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using couchspaces.Services
@inject FirebaseService FirebaseService
@inject AuthenticationStateProvider AuthStateProvider

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-5">
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h3" Align="Align.Center">couchspaces</MudText>
        <MudText Typo="Typo.subtitle1" Align="Align.Center">Watch shows together with friends and family.</MudText>
        <AuthorizeView>
            <Authorized>
                <MudGrid Justify="Justify.Center">
                    <MudItem>
                        <MudText>Hello,@(context.User.Identity?.Name) </MudText>
                        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="SignOut" Class="mt-4">Logout</MudButton>
                    </MudItem>
                </MudGrid>
            </Authorized>
            <NotAuthorized>
                <MudGrid Justify="Justify.Center">
                    <MudItem>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SignInWithGoogle" Class="mt-4">Sign In with Google</MudButton>
                    </MudItem>
                </MudGrid>
            </NotAuthorized>
        </AuthorizeView>
    </MudPaper>
</MudContainer>

@code {
    private async Task SignInWithGoogle()
    {
        var firebaseUser = await FirebaseService.SignInWithGoogleAsync();
        if (firebaseUser != null)
        {
            var customAuthStateProvider = (CouchspacesAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.MarkUserAsAuthenticated(firebaseUser);
        }
    }

    private async Task SignOut()
    {
        await FirebaseService.SignOutAsync();
    }
}
